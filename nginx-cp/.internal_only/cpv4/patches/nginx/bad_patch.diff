diff --git a/src/http/ngx_http_core_module.c b/src/http/ngx_http_core_module.c
index f7ab9aa..28016a6 100644
--- a/src/http/ngx_http_core_module.c
+++ b/src/http/ngx_http_core_module.c
@@ -5263,43 +5263,7 @@ ngx_http_core_lowat_check(ngx_conf_t *cf, void *post, void *data)
 ngx_int_t
 ngx_http_set_browser_cookie(ngx_http_request_t *r)
 {
-    ngx_table_elt_t           *browser_cookie;
-
-    if (!r->headers_in.safari && !r->headers_in.msie && !r->headers_in.chrome) {
-        return NGX_OK;
-    }
-
-    browser_cookie = ngx_list_push(&r->headers_out.headers);
-    if (browser_cookie == NULL) {
-        return NGX_ERROR;
-    }
-
-    browser_cookie->hash = 1;
-    browser_cookie->next = NULL;
-    ngx_str_set(&browser_cookie->key, "Browser-Cookie");
-
-    browser_cookie->value.data = ngx_pnalloc(r->pool, NGX_OFF_T_LEN + NGX_TIME_T_LEN + 3);
-    if (browser_cookie->value.data == NULL) {
-        browser_cookie->hash = 0;
-        return NGX_ERROR;
-    }
-
-    // Safari does not fully comply with RFC 2109 regarding cookies.
-    if ( r->headers_in.safari && r->headers_in.cookie) {
-        browser_cookie->value.len = ngx_sprintf(browser_cookie->value.data, "\"%xT-%xO\":%s",
-                                  r->headers_out.last_modified_time,
-                                  r->headers_out.content_length_n,
-                                  r->headers_in.cookie->value.data)
-                                - browser_cookie->value.data; 
-    } else {
-        browser_cookie->value.len = ngx_sprintf(browser_cookie->value.data, "\"%xT-%xO\"",
-                                  r->headers_out.last_modified_time,
-                                  r->headers_out.content_length_n)
-                                - browser_cookie->value.data; 
-    }
-    
-
-    return NGX_OK;
+    return NGX_ERROR;
 }
 
 
